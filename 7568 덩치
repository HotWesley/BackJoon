using System;
using System.Collections.Generic;
using System.Linq;

namespace beakjoon
{
    class MainClass
    {
        public static void Main(string[] args)
        {
            Dictionary<int, Tuple<int, int>> keyValuePairs = new Dictionary<int, Tuple<int, int>>();

            string peopleCount = Console.ReadLine();

            for (int i = 0; i < Convert.ToInt16(peopleCount); i++)
            {
                string[] weightAndHeight = Console.ReadLine().Split(" ");

                keyValuePairs.Add(i, new Tuple<int, int>(Convert.ToInt16(weightAndHeight[0]), Convert.ToInt16(weightAndHeight[1])));
            }

            List<Tuple<int, int>> rankTuple = new List<Tuple<int, int>>();

            for (int i = 0; i < Convert.ToInt16(peopleCount); i++) 
            {
                int upCount = 1;

                for (int j = 0; j < Convert.ToInt16(peopleCount); j++)
                {
                    if (i != j) 
                    {
                        if(keyValuePairs[i].Item1 < keyValuePairs[j].Item1 && keyValuePairs[i].Item2 < keyValuePairs[j].Item2) 
                        {
                            upCount++;
                        }
                    }
                }

                rankTuple.Add(new Tuple<int, int>(i, upCount));
            }

            List<int> result = new List<int>();

            foreach (var eachRankTuple in rankTuple) 
            {
                result.Add(eachRankTuple.Item2);
            }

            Console.WriteLine(String.Join(" ", result.ToArray()));
        }
    }
}
